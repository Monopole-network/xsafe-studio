name: multisig-deploy-staging-non-docker

on:
  workflow_dispatch:
  push:
    branches:
      - 'feature/MultiSig-Staging-PRJ-6013'

jobs:
  deploy-staging-non-docker:
    runs-on: [self-hosted]
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting
        if: always()

      - name: Checkout
        id: Checkout
        uses: actions/checkout@master
        with:
          ref: 'develop'
        if: success()

      - name: Create .env
        run: |
          awk -v EXTRAS_API_DEVNET="${{ secrets.EXTRAS_API_DEVNET }}" \
              -v MAIAR_ID_API_DEVNET="${{ secrets.MAIAR_ID_API_DEVNET }}" \
              -v UNIQUE_CONTRACT_ADDRESS="${{ secrets.UNIQUE_CONTRACT_ADDRESS }}" \
              -v UNIQUE_CONTRACT_NAME="${{ secrets.UNIQUE_CONTRACT_NAME }}" \
              -v NPM_AUTH_TOKEN="${{ secrets.NPMRC }}" \
              '{ \
                  sub(/XXX_EXTRAS_API_DEVNET_XXX/, EXTRAS_API_DEVNET); \
                  sub(/XXX_MAIAR_ID_API_DEVNET_XXX/, MAIAR_ID_API_DEVNET); \
                  sub(/XXX_UNIQUE_CONTRACT_ADDRESS_XXX/, UNIQUE_CONTRACT_ADDRESS); \
                  sub(/XXX_UNIQUE_CONTRACT_NAME_XXX/, UNIQUE_CONTRACT_NAME); \
                  sub(/XXX_NPM_AUTH_TOKEN_XXX/, NPM_AUTH_TOKEN); \
                  print; \
              }' \
              .env.staging > .env

      - name: Config setup
        run: |
          echo '${{ secrets.NPMRC }}' >> .npmrc
          cp ./src/config.testnet.ts ./src/config.ts
          cat /dev/null > src/multisigExtrasConfig.ts
          echo "export const storageApi = '${{ secrets.EXTRAS_API_DEVNET }}';" >> ./src/multisigExtrasConfig.ts
          echo "export const maiarIdApi = '${{ secrets.MAIAR_ID_API_DEVNET }}';" >> ./src/multisigExtrasConfig.ts
          cat /dev/null > src/multisigConfig.ts
          echo "export const uniqueContractName = '${{ secrets.UNIQUE_CONTRACT_NAME }}';" >> src/multisigConfig.ts
          echo "export const uniqueContractAddress = '${{ secrets.UNIQUE_CONTRACT_ADDRESS }}';" >> src/multisigConfig.ts

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}      
      
      - uses: actions/setup-node@v2-beta
      - name: YARN Install
        id: YARN-Install
        if: success()
        run: yarn install

      # - name: Lint
      #   id: Lint
      #   if: success()
      #   run: |
      #     yarn lint

      - name: Build
        id: Build
        if: success()
        run: |
          export NODE_OPTIONS="--max-old-space-size=2048"
          export CI=false
          yarn build

      - name: Deploy
        id: Deploy
        uses: up9cloud/action-rsync@v1.1
        if: success()
        env:
          HOST: staging.control.validblocks.com
          USER: graffino
          KEY: ${{secrets.DEPLOY_SSH_KEY}}
          SSH_ARGS: ' -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'

          VERBOSE: true
          ARGS: -carEzhvP --delete-before --exclude .git --exclude .github --exclude vendor --exclude .docker/logs --exclude storage --exclude node_modules --exclude README* --exclude public/docs --exclude bootstrap/cache

          TARGET: ~/staging.control.validblocks.com/
          SOURCE: ./build/

          PRE_SCRIPT: |
            echo "Start at: " $(date -u)
            cd ~/staging.control.validblocks.com
            ls

          POST_SCRIPT: |
            cd ~/staging.control.validblocks.com
            ls
            echo "Stop at: " $(date -u)

      - uses: act10ns/slack@v1.2.2
        if: always()
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
